<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.1.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.1.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.1.xsd
		 ">
	<!-- springMVC扫描驱动 添加注解驱动 -->
    <mvc:annotation-driven enable-matrix-variables="true" />
	<!-- 定义Controller的扫描包 -->
	<!-- 解决事物失效问题：在主容器中不扫描@Controller注解，在SpringMvc中只扫描@Controller注解 -->
	<context:component-scan base-package="com.frame.web" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
    
    <!-- 将无法mapping到Controller的path交给default servlet handler处理 -->
    <mvc:default-servlet-handler />
    
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />
	<!-- 加载文件上传路径配置文件 解决@controller 中无法注入配置文件中的属性 -->
<!-- 	<context:property-placeholder location="classpath*:config/env.properties"/> -->
	<!-- springmvc资源文件位置 -->
	<mvc:resources mapping="/resources/**" location="/resources/**" />
	<mvc:resources mapping="/static/**" location="/static/**" />
	<!-- 解决spring和springmvc父子容器问题 -->
<!-- 	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
        <property name="detectHandlerMethodsInAncestorContexts">
            <value>true</value>
        </property>
	</bean>	 -->
	<!-- 用于解决SpringMVC乱码 -->
 	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    
     
<!--    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
            <bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
		        <constructor-arg>
		        	<bean class="org.springframework.oxm.xstream.XStreamMarshaller">
				        <property name="streamDriver">
				            <bean class="com.thoughtworks.xstream.io.xml.StaxDriver"/>
				        </property>
				        <property name="annotatedClasses">
				            <list>
				                <value>com.frame.persistence.BaseEntity</value>
				            </list>
				        </property>
				    </bean>
		        </constructor-arg>
		        <property name="supportedMediaTypes" value="application/xml"></property>
			</bean>
        </mvc:message-converters>
    </mvc:annotation-driven> -->
    
    <!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
     <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
	    <property name="mediaTypes" >
	        <map> 
                <entry key="xml" value="application/xml"/> 
                <entry key="json" value="application/json"/> 
            </map>
	    </property>
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="favorPathExtension" value="true"/>
	</bean>
	
	
	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />
    <!-- FreeMarker模板路径 -->
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="freemarkerSettings">
        	<props>
        		<prop key="template_update_delay">1</prop>
        		<prop key="default_encoding">UTF-8</prop>
        		<prop key="number_format">0.############</prop>
        		<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
        		<prop key="classic_compatible">true</prop>
        		<prop key="template_exception_handler">ignore</prop>
        	</props>
        </property>
        <property name="templateLoaderPath" value="/WEB-INF/templates/"/>
        <property name="freemarkerVariables">
            <map>
                <entry key="xml_escape" value-ref="fmXmlEscape" />
            </map>
        </property>
        <property name="defaultEncoding" value="utf-8"/>
    </bean>


    <!-- 配置freeMarker视图解析器 -->
    <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
    	<!-- org.springframework.web.servlet.view.freemarker.FreeMarkerView com.base.FreeMarkerViewUtil-->
        <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
        <property name="contentType" value="text/html; charset=utf-8" />
        <property name="prefix" value=""/>  
        <property name="suffix" value=".ftl" />
        <property name="order" value="0" />
        <property name="exposeRequestAttributes" value="true" />
        <property name="exposeSessionAttributes" value="true" />
        <property name="exposeSpringMacroHelpers" value="true" />
    </bean>
    
    <!-- 配置springmvc 视图解析器 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/"></property>
		<property name="suffix" value=".jsp"></property>
		<property name="order" value="1"></property>
	</bean>
	<!-- 定义无Controller的path<->view直接映射 -->
	<!-- <mvc:view-controller path="/" view-name="redirect:${web.view.index}"/> -->
	<!-- 配置文件上传解析器 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 总文件大小 -->
		<property name="maxUploadSize" value="50000000"></property>
		<!-- 文件存放地方 -->
		<!-- <property name="uploadTempDir" value="fileUpload/temp"></property> -->
		<property name="defaultEncoding" value="UTF-8"></property>
	</bean>
	
	<bean id="multipartResolver2" class="com.frame.web.fileupload.MultipartResolver">  
	    <property name="defaultEncoding" value="UTF-8"/>  
	    <property name="fileSizeMax" value="20971520"/><!-- 20M ： Maximum size of a single uploaded file-->  
	    <property name="maxUploadSize" value="52428800"/><!-- 50M ： The maximum allowed size of a complete request-->  
	</bean>
	<!-- 配置异常类的错误页面 -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		 <property name="exceptionMappings">
		 	<props>
		 		<!-- 配置异常页面 -->
		 		<prop key="java.lang.Exception">error</prop>
                <prop key="java.lang.Throwable">error</prop>
		 		<!-- 遇到上传错误时候 自动跳到错误页面 -->
		 		<prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error</prop>
		 		<!-- 配置session超时自动跳到登录页面 -->
		 	</props>
		 </property>
	</bean>	

	<!-- 配置权限拦截器 -->
 	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="/login"/>
			<mvc:exclude-mapping path="/dologin"/>
			<mvc:exclude-mapping path="/register"/>
			<mvc:exclude-mapping path="/check"/>
			<mvc:exclude-mapping path="/t"/>
			<mvc:exclude-mapping path="/"/>
			<mvc:exclude-mapping path="/quit"/>
			<mvc:exclude-mapping path="/websocket/bobo"/>
			<bean class="com.frame.intercept.LoginInterceptor">
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 查询资源拦截-->
<!-- 	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/search/**" />
			<bean class="com.frame.web.WebSourceRequestInterceptor">
		    </bean>
		</mvc:interceptor>
	</mvc:interceptors> -->
	
		<!-- url站点控制拦截器 -->
<!-- 	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.frame.web.UrlRequestInterceptor">
				<property name="allowSessionUrl">
					<list>
						<value>/index.do</value>
					</list>
				</property>
		    </bean>
		</mvc:interceptor>
	</mvc:interceptors> -->
</beans>