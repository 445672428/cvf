<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:task="http://www.springframework.org/schema/task" xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
    http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
    http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

    <bean id="jedisConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxTotal" value="${redis.maxActive}"></property>  
        <property name="maxIdle" value="${redis.maxIdle}"></property>  
        <property name="maxWaitMillis" value="${redis.maxWait}"></property>  
        <property name="testOnBorrow" value="${redis.testOnBorrow}"></property>  
    </bean>  
    <!-- redis连接工厂 -->  
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">  
        <property name="hostName" value="${redis.ip}"></property>  
        <property name="port" value="${redis.port}"></property>  
        <property name="password" value="${redis.password}"></property>  
        <property name="poolConfig" ref="jedisConfig"></property>  
    </bean>  
    <!-- redis操作模板，这里采用尽量面向对象的模板 -->  
     <bean id="jedisTemplate" class="org.springframework.data.redis.core.RedisTemplate"> 
		  <property name="connectionFactory" ref="connectionFactory"></property> 
		  <property name="keySerializer"> 
		   		<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/> 
		  </property> 
		  <property name="valueSerializer"> 
		   		<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/> 
		  </property> 
		          <!--开启事务-->  
          <property name="enableTransactionSupport" value="true"/>  
	 </bean>
 
		<!-- 定义分片式连接池 -->
<!-- 		<bean class="redis.clients.jedis.ShardedJedisPool">
			<constructor-arg index="0">
				<bean class="redis.clients.jedis.JedisPoolConfig">
					<property name="maxTotal" value="${redis.maxActive}"></property>  
			        <property name="maxIdle" value="${redis.maxIdle}"></property>  
			        <property name="maxWaitMillis" value="${redis.maxWait}"></property>  
			        <property name="testOnBorrow" value="${redis.testOnBorrow}"></property>  
				</bean>
			</constructor-arg>
			<constructor-arg index="1">
				<list>
					<bean class="redis.clients.jedis.JedisShardInfo">
						<constructor-arg index="0" value="${redis.ip}"/>
						<constructor-arg index="1" value="${redis.port}"/>
					</bean>
				</list>
			</constructor-arg>
		</bean> -->
		
		<!--  redis连接池  这里引用的是jedis 包中的功能  -->
    <!-- <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.maxActive}" />
        <property name="maxIdle" value="${redis.maxIdle}" />
        <property name="maxWaitMillis" value="${redis.maxWait}" />
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
        <property name="testOnReturn" value="${redis.testOnReturn}" />
    </bean>

    Redis集群配置     这里使用的是spring-data-redis  包中内容
     <bean id="redisClusterConfig" class="org.springframework.data.redis.connection.RedisClusterConfiguration">
        <property name="maxRedirects" value="6"></property>
        <property name="clusterNodes">
            <set>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis.ip}"></constructor-arg>
                    <constructor-arg name="port" value="${redis.port}"></constructor-arg>
                </bean>
                 <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis.ip}"></constructor-arg>
                    <constructor-arg name="port" value="${redis.port}"></constructor-arg>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis.ip}"></constructor-arg>
                    <constructor-arg name="port" value="${redis.port}"></constructor-arg>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis.ip}"></constructor-arg>
                    <constructor-arg name="port" value="${redis.port}"></constructor-arg>
                </bean>
                 <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis.ip}"></constructor-arg>
                    <constructor-arg name="port" value="${redis.port}"></constructor-arg>
                </bean>
                 <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis.ip}"></constructor-arg>
                    <constructor-arg name="port" value="${redis.port}"></constructor-arg>
                </bean>
            </set>
        </property>
    </bean>
    Redis连接工厂    
    <bean id="redis4CacheConnectionFactory"
        class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <constructor-arg name="clusterConfig" ref="redisClusterConfig" />
        <property name="timeout" value="${redis.timeout:10000}" />
        <property name="poolConfig" ref="jedisPoolConfig" />
    </bean>
    存储序列化
    <bean name="stringRedisSerializer"
        class="org.springframework.data.redis.serializer.StringRedisSerializer" />

    集群Resis使用模板
    <bean id="clusterRedisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="redis4CacheConnectionFactory" />
        <property name="keySerializer" ref="stringRedisSerializer" />
        <property name="hashKeySerializer" ref="stringRedisSerializer" />
        <property name="valueSerializer" ref="stringRedisSerializer" />
        <property name="hashValueSerializer" ref="stringRedisSerializer" />
    </bean> -->
	
</beans>